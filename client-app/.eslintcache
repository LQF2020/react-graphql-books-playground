[{"D:\\projects\\graphql-react-playground\\client-app\\src\\index.js":"1","D:\\projects\\graphql-react-playground\\client-app\\src\\reportWebVitals.js":"2","D:\\projects\\graphql-react-playground\\client-app\\src\\App.js":"3","D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\BookList.js":"4","D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookDisplay\\BookDisplay.js":"5","D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\Books\\Books.js":"6","D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\BookHandler\\BookHandler.js":"7","D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\Books\\Book\\Book.js":"8","D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\BookHandler\\CreateBook\\CreateBook.js":"9","D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\BookHandler\\CreateAuthor\\CreateAuthor.js":"10","D:\\projects\\graphql-react-playground\\client-app\\src\\graphql\\requests.js":"11"},{"size":500,"mtime":499162500000,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":969,"mtime":1609826761763,"results":"15","hashOfConfig":"13"},{"size":1591,"mtime":1609827128599,"results":"16","hashOfConfig":"13"},{"size":1164,"mtime":1609818139476,"results":"17","hashOfConfig":"13"},{"size":767,"mtime":1609818076826,"results":"18","hashOfConfig":"13"},{"size":514,"mtime":1609809722039,"results":"19","hashOfConfig":"13"},{"size":321,"mtime":1609818047811,"results":"20","hashOfConfig":"13"},{"size":2842,"mtime":1609827156952,"results":"21","hashOfConfig":"13"},{"size":2077,"mtime":1609827173886,"results":"22","hashOfConfig":"13"},{"size":916,"mtime":1609827083257,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"uvaihz",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"D:\\projects\\graphql-react-playground\\client-app\\src\\index.js",[],["50","51"],"D:\\projects\\graphql-react-playground\\client-app\\src\\reportWebVitals.js",[],"D:\\projects\\graphql-react-playground\\client-app\\src\\App.js",[],"D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\BookList.js",["52","53"],"import classes from \"./BookList.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport Books from \"./Books/Books\";\r\nimport BookHandler from \"./BookHandler/BookHandler\";\r\nimport { GET_All_AUTHORS_AND_BOOKS } from \"../../graphql/requests\";\r\n\r\nconst BookList = (props) => {\r\n    const { loading, error, data: allAuthorsAndBooks } = useQuery(\r\n        GET_All_AUTHORS_AND_BOOKS\r\n    );\r\n    const [books, setBooks] = useState([]);\r\n    const [authors, setAuthors] = useState([]);\r\n    const onBookCreated = (newBook) => {\r\n        setBooks((books) => [...books, newBook]);\r\n    };\r\n    const onAuthorCreated = (newAuthor) => {\r\n        setAuthors((authors) => [...authors, newAuthor]);\r\n    };\r\n    const initAuthorsAndBooks = () => {\r\n        if (!books.length && !authors.length) {\r\n            if (\r\n                !loading &&\r\n                error === undefined &&\r\n                allAuthorsAndBooks.authors.length\r\n            ) {\r\n                setBooks(allAuthorsAndBooks.books);\r\n                setAuthors(allAuthorsAndBooks.authors);\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        initAuthorsAndBooks();\r\n    }, [allAuthorsAndBooks]);\r\n\r\n    return (\r\n        <div className={classes.BookList}>\r\n            <Books books={books} onBookSelected={props.onBookSelected} />\r\n            <BookHandler\r\n                authors={authors}\r\n                onBookCreated={onBookCreated}\r\n                onAuthorCreated={onAuthorCreated}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nexport default BookList;\r\n","D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookDisplay\\BookDisplay.js",[],"D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\Books\\Books.js",[],"D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\BookHandler\\BookHandler.js",[],"D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\Books\\Book\\Book.js",[],"D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\BookHandler\\CreateBook\\CreateBook.js",["54","55"],"import classes from \"./CreateBook.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { ADD_BOOK } from \"../../../../graphql/requests\";\r\n\r\nconst renderAllAuthors = (authors) => {\r\n    return authors.map((author) => (\r\n        <option value={author._id} key={author._id}>\r\n            {author.name}\r\n        </option>\r\n    ));\r\n};\r\n\r\nconst CreateBook = (props) => {\r\n    const [addBook, { data: newBook }] = useMutation(ADD_BOOK);\r\n    const [bookname, setBookName] = useState(\"\");\r\n    const [genre, setGenre] = useState(\"\");\r\n    const [authorID, setAuthorID] = useState(\"\");\r\n    const createBook = () => {\r\n        if (bookname && genre && authorID) {\r\n            addBook({\r\n                variables: { name: bookname, genre: genre, authorID: authorID },\r\n            });\r\n        } else {\r\n            alert(\"Unable to create book. Please complete all the fields.\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (newBook && newBook.addBook) {\r\n            props.onBookCreated(newBook.addBook);\r\n        }\r\n    }, [newBook]);\r\n    return (\r\n        <div className={classes.CreateBook}>\r\n            <form\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    createBook();\r\n                }}\r\n            >\r\n                <label htmlFor=\"bname\">Book Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"bname\"\r\n                    name=\"bookname\"\r\n                    placeholder=\"Book name..\"\r\n                    value={bookname}\r\n                    onChange={(event) => {\r\n                        setBookName(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <label htmlFor=\"genre\">Genre</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"genre\"\r\n                    name=\"genre\"\r\n                    placeholder=\"Genre..\"\r\n                    value={genre}\r\n                    onChange={(event) => {\r\n                        setGenre(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <label htmlFor=\"author\">Author</label>\r\n                <select\r\n                    id=\"author\"\r\n                    name=\"author\"\r\n                    value={authorID}\r\n                    onChange={(event) => {\r\n                        setAuthorID(event.target.value);\r\n                    }}\r\n                >\r\n                    <option value=\"\" disabled hidden>\r\n                        Choose here\r\n                    </option>\r\n                    {props.authors && renderAllAuthors(props.authors)}\r\n                </select>\r\n\r\n                <input type=\"submit\" value=\"Create\" />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateBook;\r\n","D:\\projects\\graphql-react-playground\\client-app\\src\\components\\BookList\\BookHandler\\CreateAuthor\\CreateAuthor.js",["56","57"],"import classes from \"./CreateAuthor.module.css\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useMutation, gql } from \"@apollo/client\";\r\nimport { ADD_AUTHOR } from \"../../../../graphql/requests\";\r\n\r\nconst CreateAuthor = (props) => {\r\n    const [addAuthor, { data: newAuthor }] = useMutation(ADD_AUTHOR);\r\n    const [authorName, setAuthorName] = useState(\"\");\r\n    const [age, setAge] = useState(\"\");\r\n    const createAuthor = () => {\r\n        if (age && authorName) {\r\n            addAuthor({ variables: { name: authorName, age: parseInt(age) } });\r\n            setAuthorName(\"\");\r\n            setAge(\"\");\r\n        } else {\r\n            alert(\"Unable to create author. Please complete all the fields.\");\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (newAuthor && newAuthor.addAuthor) {\r\n            props.onAuthorCreated(newAuthor.addAuthor);\r\n        }\r\n    }, [newAuthor]);\r\n    return (\r\n        <div className={classes.CreateAuthor}>\r\n            <form\r\n                onSubmit={(e) => {\r\n                    e.preventDefault();\r\n                    createAuthor();\r\n                }}\r\n            >\r\n                <label htmlFor=\"aname\">Author Name</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"aname\"\r\n                    name=\"Authorname\"\r\n                    placeholder=\"Author name..\"\r\n                    value={authorName}\r\n                    onChange={(event) => {\r\n                        setAuthorName(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <label htmlFor=\"age\">Age</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"age\"\r\n                    name=\"age\"\r\n                    placeholder=\"Age..\"\r\n                    value={age}\r\n                    onChange={(event) => {\r\n                        setAge(event.target.value);\r\n                    }}\r\n                />\r\n\r\n                <input type=\"submit\" value=\"Create\" />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateAuthor;\r\n","D:\\projects\\graphql-react-playground\\client-app\\src\\graphql\\requests.js",[],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":20,"nodeType":"64","messageId":"65","endLine":3,"endColumn":23},{"ruleId":"66","severity":1,"message":"67","line":34,"column":8,"nodeType":"68","endLine":34,"endColumn":28,"suggestions":"69"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":23,"nodeType":"64","messageId":"65","endLine":3,"endColumn":26},{"ruleId":"66","severity":1,"message":"70","line":32,"column":8,"nodeType":"68","endLine":32,"endColumn":17,"suggestions":"71"},{"ruleId":"62","severity":1,"message":"63","line":3,"column":23,"nodeType":"64","messageId":"65","endLine":3,"endColumn":26},{"ruleId":"66","severity":1,"message":"70","line":23,"column":8,"nodeType":"68","endLine":23,"endColumn":19,"suggestions":"72"},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"no-unused-vars","'gql' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'initAuthorsAndBooks'. Either include it or remove the dependency array.","ArrayExpression",["75"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["76"],["77"],"no-global-assign","no-unsafe-negation",{"desc":"78","fix":"79"},{"desc":"80","fix":"81"},{"desc":"82","fix":"83"},"Update the dependencies array to be: [allAuthorsAndBooks, initAuthorsAndBooks]",{"range":"84","text":"85"},"Update the dependencies array to be: [newBook, props]",{"range":"86","text":"87"},"Update the dependencies array to be: [newAuthor, props]",{"range":"88","text":"89"},[1203,1223],"[allAuthorsAndBooks, initAuthorsAndBooks]",[1095,1104],"[newBook, props]",[882,893],"[newAuthor, props]"]